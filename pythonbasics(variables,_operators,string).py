# -*- coding: utf-8 -*-
"""PYTHONBASICS(Variables, Operators,String).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IkCN-l7QJ7VXj4FRMz0hnkNbrysHYdlF

START
"""

print('Hello World!')
print('Hi,Python!')

import sys
print(sys.version)     # version control
print(sys.gettrace)    # get the global debug tracing function
print(sys.argv)        # keeps the parameters used while running the program we wrote in a list.

help(sys) # here the module name is 'sys'

# String
print("Hello, World!")
# Integer
print(12)
# Float
print(3.14)
# Boolean
print(True)
print(False)
print(bool(1)) # Output = True
print(bool(0)) # Output = False

# String
print(type('Hello, World!'))
# Integer
print(type(15))
print(type(-24))
print(type(0))
print(type(1))
# Float
print(type(3.14))
print(type(0.5))
print(type(1.0))
print(type(-5.0))
# Boolean
print(type(True))
print(type(False))

# to obtain the information about 'interger' and 'float'
print(sys.int_info)
print()
# to add a space between two outputs, use 'print()' function
print(sys.float_info)

# Let's convert the integer number 6 to a string and a float
number = 6
print(str(number))
print(float(number))
print(type(number))
print(type(str(number)))
print(type(float(number)))
str(number)

# Let's conver the float number 3.14 to a string and an integer
number = 3.14
print(str(number))
print(int(number))
print(type(number))
print(type(str(number)))
print(type(int(number)))
str(number)

# Let's convert the booleans to an integer, a float, and a string
bool_1 = True
bool_2 = False
print(int(bool_1))
print(int(bool_2))
print(float(bool_1))
print(float(bool_2))
print(str(bool_1))
print(str(bool_2))
print(bool(1))
print(bool(0))

# Let's find the data types of 9/3 and 9//4
print(9/3)
print(9//4)
print(type(9/3))
print(type(9//4))

# Addition
x = 56+65+89+45+78.5+98.2
print(x)
print(type(x))

# Substraction
x = 85-52-21-8
print(x)
print(type(x))

# Multiplication
x = 8*74
print(x)
print(type(x))

# Division
x = 125/24
print(x)
print(type(x))

# Floor division
x = 125//24
print(x)
print(type(x))

# Modulus
x = 125%24
print(x)
print(type(x))

# Exponentiation
x=2**3
print(x)
print(type(x))

# An example: Let's calculate how many minutes there are in 20 hours?
one_hour = 60 # 60 minutes
hour = 20
minutes = one_hour*hour
print(minutes)
print(type(minutes))
# An example: Let's calculate how many hours there are in 348 minutes?
minutes = 348
one_hour = 60
hours = 348/60
print(hours)
print(type(hours))

# Mathematica expression
x = 45+3*89
y = (45+3)*89
print(x)
print(y)
print(x+y)
print(x-y)
print(x*y)
print(x/y)
#print(x**y)
print(x//y)
print(x%y)

# Store the value 89 into the variabe 'number'
number = 90
print(number)
print(type(number))

"""**STRING**"""

# Employ double quotation marks for describing a string
"Hello World!"

# Employ single quotation marks for describing a string
'Hello World!'

# Digitals and spaces in a string
'3 6 9 2 6 8'

# Specific characters in a string
'@#5_]*$%^&'

# printing a string
print('Hello World!')

# Assigning a string to a variable 'message'
message = 'Hello World!'
print(message)
message

"""Indexing of a string"""



# printing the first element in a string
message = 'Hello World!'
print(message[0])

# Printing the element on index 8 in a string
print(message[8])

# lenght of a string includign spaces
len(message)

# Printing the last element in a string
print(message[11])
# Another comment writing type is as follows using triple quotes.
"""
Although the length of the string is 12, since the indexing in Python starts with 0, the number of the last element is therefore 11.
"""

"""**Negative Indexing of a String**"""

# printing the last element of a string
message[-1]

# printing the first element of a string
message[-12]
"""
Since the negative indexing starts with -1, in this case, the negative index number of the first element is equal to -12.
"""

print(len(message))
len(message)

len('Hello World!')

"""Slicing of a String"""

# Slicing on the variable 'message' with only index 0 to index 5
message[0:5]

# Slicing on the variable 'message' with only index 6 to index 12
message[6:12]

"""Striding in a String"""

# to select every second element in the variable 'message'
message[::2]

# corporation of slicing and striding
# get every second element in range from index 0 to index 6
message[0:6:2]

"""Concatenate of String"""

message = 'Hello World!'
question = ' How many people are living on the earth?'
statement = message+question
statement

# printing a string for 4 times
4*" Hello World!"

"""Escape sequences"""

# New line escape sequence
print('Hello World! \nHow many people are living on the earth?')

# Tab escape sequence
print('Hello World! \tHow many people are living on the earth?')

# back slash in a string
print('Hello World! \\ How many people are living on the earth?')
# r will say python that a string will be show as a raw string
print(r'Hello World! \ How many people are living on the earth?')

"""String operations"""

message = 'hello python!'
print('Before uppercase: ', message )

# convert uppercase the elements in a string
message_upper = message.upper()
print('After uppercase: ', message_upper)

# convert lowercase the elements in a string
message_lower = message.lower()
print('Again lowercase: ', message_lower)
# convert first letter of string to uppercase
message_title = message.title()
print('The first element of the string is uppercase: ', message_title)

# replace() method in a string
message = 'Hello Python!'
message_hi = message.replace('Hello', 'Hi')
message_python = message.replace('Python', 'World')
print(message_hi)
print(message_python)

# find() method application in a string
message = 'Hello World!'
print(message.find('Wo'))
# the output is the index number of the first element of the substring

# find() method application to obtain a substring in a string
message.find('World!')

# if cannot find the substring in a string, the output is -1.
message.find('cndsjnd')

text = 'Jean-Paul Sartre somewhere Nancy observed that we each of us make our own hell out of the people around us.'
# find the first index of the substring 'Nancy'
text.find('Nancy')

# replace the substring 'Nancy' with 'Nancy Lier Cosgrove Mullis'
text.replace('Nancy', 'Nancy Lier Cosgrove Mullis')

# convet the text to lower case
text.lower()

# convert the first letter of the text to capital letter
text.capitalize()

# casefold() method returns a string where all the characters are in lower case
text.casefold()

# center() method will center align the string, using a specified character (space is the default) as the fill character.
message = 'Hallo Leute!'
message.center(50, '-')

# count() method returns the number of elements with the specified value
text.count('and')

# format() method
"""
The format() method formats the specified value(s) and insert them inside the string's placeholder.
The placeholder is defined using curly brackets: {}.
"""

txt = "Hello {word}"
print(txt.format(word = 'World!'))

message1 = 'Hi, My name is {} and I am {} years old.'
print(message1.format('Bob', 36))

message2 = 'Hi, My name is {name} and I am {number} years old.'
print(message2.format(name ='Bob', number = 36))

message3 = 'Hi, My name is {0} and I am {1} years old.'
print(message3.format('Bob', 36))

"""# New section"""